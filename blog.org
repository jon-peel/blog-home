#+HUGO_BASE_DIR: ./
#+HUGO_SECTION: posts
#+HUGO_CODE_FENCE: nil

* Blog :blog:

*** Read Me
https://nethuml.github.io/posts/2022/06/blog-setup-with-hugo-org-mode/


** FSharp Blog :fsharp:dotnet:blog:
:PROPERTIES:
:EXPORT_FILE_NAME: fsharp-blog
:EXPORT_DATE: <2023-11-24 Fri 06:54>
:END:

I want to blog about F#, and .Net (or is it dotnet?)

#+begin_src fsharp :exports both
let greet () = "Hello, World!"

greet ()
#+end_src

#+RESULTS:
: Hello, World!


** Second Post :blog:
:PROPERTIES:
:EXPORT_FILE_NAME: second-post
:EXPORT_DATE: <2023-11-24 Fri 07:24>
:END:

This is the second post.
I want to try output instead f results.

#+begin_src fsharp :exports output
printfn "Hello, World!"
#+end_src

doesn't print output, but it does print results.


#+begin_src fsharp :session sp :exports code
let greet name = $"Hello, {name}!"
#+end_src

Which is called with

#+NAME: sp-call-greet
#+begin_src fsharp :session sp :exports both
greet "Jonathan P"
#+end_src

Which will then return:
#+RESULTS: sp-call-greet
: Hello, Jonathan!


** Advent of Code 2023 :advent:code:AoC:fsharp:
:PROPERTIES:
:EXPORT_FILE_NAME: 2023-advent-of-code
:EXPORT_DATE: <2023-11-24 Fri 07:39>
:END:

[[https://adventofcode.com/][Advent of Code]] will be starting soon, and I want to see if can manage any of the challenges using F#.


** AoC 2023, Day 1, Trebuchet :AoC:advent:cod:fsharp:
:PROPERTIES:
:EXPORT_FILE_NAME: aoc-2023-01-a
:EXPORT_DATE: <2023-12-01 Fri 08:06>
:END:

It is the first of December, and that means the start of [[https://adventofcode.com/2023][Advent of Code]].
I am going to make an attempt at this every day, posting my coding solutions (as much as possible in F#). I will not be posting the questions, as they can be found online, and I will not be posting my final answer.

[[https://adventofcode.com/2023/day/1][The first question is called Trebuchet]].

I will first need a function that will be able to grab the first and last digits from a single row string.

#+begin_src fsharp :session aoc-2023-01-a :exports both
let firstAndLastDigit (codedCalibration: string) =
    let digits =
        codedCalibration
        |> Seq.map id
        |> Seq.where (System.Char.IsDigit)
        |> Seq.toArray
    [| digits[0]; Seq.last digits |]
    |> System.String
    |> int

firstAndLastDigit "1abc2"
#+end_src

#+RESULTS:
: 12

This might be enough to put it all together.

#+begin_src fsharp :session aoc-2023-01-a :exports code
let exampleInput =
    "1abc2
pqr3stu8vwx
a1b2c3d4e5f
treb7uchet"

exampleInput.Split '\n'
|> Seq.map firstAndLastDigit
|> Seq.sum
#+end_src

This will have a final result of `142`.
